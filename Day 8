344.反转字符串 

简单题不谈，考python的基本功

def reverseString(self, s: List[str]) -> None:
    """
    Do not return anything, modify s in-place instead.
    """
    left, right = 0, len(s) - 1

    while left < right:
        s[left], s[right] = s[right], s[left]
        left += 1
        right -= 1


 541. 反转字符串II

上一题的思路结合遍历，遍历的step是2k 

def reverseStr(self, s: str, k: int) -> str:
    def reverse_substring(s):
        left, right = 0, len(s) - 1
        while left < right:
            s[left], s[right] = s[right], s[left]
            left += 1
            right -= 1
        return s
    
    res = list(s)
    for cur in range(0, len(s), 2*k):
        res[cur: cur+k] = reverse_substring(res[cur: cur + k])
    
    return ''.join(res)


卡码网. 替换number

简单题，将str转换成list，然后遍历元素，将digit元素replace成'number'

def change(self, s):
    lst = list(s) # Python里面的string也是不可改的，所以也是需要额外空间的。空间复杂度：O(n)。
    for i in range(len(lst)):
        if lst[i].isdigit():
            lst[i] = "number"
    return ''.join(lst)
